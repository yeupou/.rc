##################################################
# yasp script
# 
# Most of these should be portable over different GNU/Linux computers

# Set default interval to 15 sec, deliberately slow, to avoid unwanted CPU
# usage 
default interval="15000"
default title:color="white" title:font="Dejavu Sans, 9" title:shadow="Sunken" title:alignment="Center"
default value:color="white" value:font="Dejavu Sans, 6" value:alignment="Left"
man

## SYSTEM LOAD
##
# Skip memory/swap used space. In theory, we should always use 100% RAM and 0%
# RAM, so knowing that memory is 40% used (buffered? cached?) isn't really
# helpful. Checking RAM/swap I/O and such is way more relevant.
title text="Charge"

# get ps output, ignoring migration/* cause it actually does not seem to
# use CPU despite what ps says
sensor name="ChargeTop2" type="program" cmd="ps axo comm,user,pcpu,pmem --sort -%cpu --no-headers | grep -v 'migration/' | head -2"
sensor name="ChargeTop6" type="program" cmd="ps axo comm,user,pcpu,pmem --sort -%cpu --no-headers | grep -v 'migration/' | head -6 | tail -4"
sensor name="ChargeTop8" type="program" cmd="ps axo comm,user,pcpu,pmem --sort -%cpu --no-headers | grep -v 'migration/' | head -8 | tail -2"
# get cpufreq-info human readable 
sensor name="ChargeCpuFreq" type="program" cmd="cpufreq-info --freq --human"
# use ps instead of /proc/stat so we avoid counting processes implied by this
# sensor
#NOT ENOUGH USEFUL TO JUSTIFY CPU USAGE IMPLIED sensor name="ChargeActive" type="program" cmd="ps axr --no-headers | grep -v 'ps axr' | wc -l" interval="8000"
# get loadavg for the last minute and get a percentage, taking into account
# the number of CPUs
sensors name="ChargeLoadAvg" type="program" cmd="expr `cat /proc/loadavg  | cut -d ' ' -f 1 | tr -d .` \/ `cat /proc/cpuinfo  | grep processor | wc -l`"
# get static data about CPU model and RAM
sensors name="StaticCpuModel" type="program" cmd="cat /proc/cpuinfo | grep 'model name' | tail -1 | cut -d ':' -f 2" interval="single"
sensors name="StaticCpuCount" type="program" cmd="cat /proc/cpuinfo  | grep processor | wc -l"
sensors name="StaticMemTotal" type="program" cmd="expr `cat /proc/meminfo | grep MemTotal: | tr -d [:alpha:][:blank:][:punct:]` \/ 1000000"

text use="StaticCpuModel" use="StaticCpuCount" use="StaticMemTotal" format="$2 x $1, $3 Go RAM :" interval="single"
value key=" " use="ChargeLoadAvg" use="ChargeCpuFreq" format="$1 % à $2" color="#E3D5FF" interval="1500"
plotter use="ChargeLoadAvg" plot="$1" color="#E3D5FF" height="50" min="0" max="100" interval="1500"
value font="Monospace, 6" use="ChargeTop2" format="$1" color="#FF9E91"  interval="8000"
value font="Monospace, 6" use="ChargeTop6" key=" " format="$1" icon="/usr/share/icons/oxygen/48x48/actions/office-chart-pie.png"  interval="8000"
value font="Monospace, 6" use="ChargeTop8" format="$1" color="#9BFFB6"  interval="8000"

## SENSORS
##
title text="Sondes"

## NETWORKING
##
title text="Réseau"
# in case of plurality of eth interfaces, just copy the eth0 stuff
# to eth(n) stuff, etc
# requires ethtool
sensor name="NetGateway" type="program" cmd="nslookup `route -n | grep UG  |awk '{print $2}'` | grep name | cut -d = -f 2 | sed s/\.$//;"
#IF THE PREVIOUS DOES NOT WORK (no domain) sensor name="NetGateway" type="program" cmd="route -n | grep UG  |awk '{print $2}'"

sensor name="NetEth0Ip" type="program" cmd="/sbin/ifconfig eth0 | egrep 'inet add?r'  | cut -d ':' -f 2 | cut -d ' ' -f 1"
sensor name="NetEth0Speed" type="program" cmd="/sbin/ethtool eth0 2>/dev/null | grep Speed: | cut -d ' ' -f 2 | sed 's/\([0-9]*\)\([^0-9]*\)/\1 \2/g;'"

sensor name="NetEth0Down" type="engine" cmd="systemmonitor:network/interfaces/eth0/receiver/data:value"
sensor name="NetEth0Up" type="engine" cmd="systemmonitor:network/interfaces/eth0/transmitter/data:value"

text use="NetEth0Ip" use="NetEth0Speed" format="$1 sur eth0 à $2 :" interval="60000"
value key=" " use="NetGateway" use="NetEth0Down" format="$1 => $2 ko/s" color="#FFFFC0" interval="3000"
value key=" " use="NetGateway" use="NetEth0Up" format="$1 <= $2 ko/s" color="#62FFEA" interval="3000"
plotter use="NetEth0Down" use="NetEth0Up" plot="$1" color="#FFFFC0" plot="$2" color="#62FFEA" height="50" interval="3000"

## STORAGE
##
title text="Stockage"
# type dd, espace libre

## (OPERATING) SYSTEM
##
title text="Système"

sensors name="StaticSysOS" type="program" cmd="lsb_release -sd"
sensors name="StaticSysKernel" type="program" cmd="uname --kernel-name --kernel-release"
sensors name="SysAptGet" type="program" cmd="apt-get --quiet --simulate --yes dist-upgrade | grep ^Inst\ | wc -l"
value key=" " use="StaticSysOS" use="StaticSysKernel" use="SysAptGet" format="$1\n$2\n$3 paquets à installer/mettre à jour\n\n" icon="/usr/share/icons/oxygen/48x48/apps/system-software-update.png"  interval="1800000"



# title text="Partitions"
# default interval="10000"
# sensor name="HomeUsed" type="engine" cmd="systemmonitor:partitions/home/usedspace:value" math="int $0 256 /"
# sensor name="HomeTotal" use="HomeUsed" type="engine" cmd="systemmonitor:partitions/home/freespace:value" math="int $0 256 / $1 +"
# sensor name="RootUsed" type="engine" cmd="systemmonitor:partitions//usedspace:value" math="int $0 256 /"
# sensor name="RootTotal" use="RootUsed" type="engine" cmd="systemmonitor:partitions//freespace:value" math="int $0 256 / $1  +"
# meter use="RootUsed" use="RootTotal" label:0="root" label:1="$1 Mb / $2 Mb" alignment:1="right" min="0" max="$2" value="$1"
# meter use="HomeUsed" use="HomeTotal" label:0="home" label:1="$1 Mb / $2 Mb" alignment:1="right" min="0" max="$2" value="$1"

