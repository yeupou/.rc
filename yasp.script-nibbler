# -*- sh -*-
##################################################
# yasp script
# 
# Most of these should be portable over different GNU/Linux computers

# Set default interval to 15 sec, deliberately slow, to avoid unwanted CPU
# usage 
default interval="15000"
default title:color="white" title:font="Dejavu Sans, 9" title:shadow="Sunken" title:alignment="Center"
default value:color="white" value:font="Dejavu Sans, 8" value:alignment="Left"
man

## SYSTEM LOAD
##
# Skip memory/swap used space. In theory, we should always use 100% RAM and 0%
# RAM, so knowing that memory is 40% used (buffered? cached?) isn't really
# helpful. Checking RAM/swap I/O and such is way more relevant.
title text="Charge"

# get ps output, ignoring migration/* cause it actually does not seem to
# use CPU despite what ps says
sensor name="ChargeTop" type="program" cmd="ps axo comm,user,pcpu,pmem --sort -%cpu --no-headers | grep -v 'migration/' | head -8" interval="6000"

# get cpufreq-info human readable 
# (systemmonitor:cpu/system/AverageClock:value)
sensor name="ChargeCpuFreq" type="program" cmd="cpufreq-info --freq --human" interval="3000"

# Static info about the currenty hardware
sensors name="StaticCpuModel" type="program" cmd="cat /proc/cpuinfo | grep 'model name' | tail -1 | cut -d ':' -f 2" interval="single"
sensors name="StaticCpuCount" type="program" cmd="cat /proc/cpuinfo  | grep processor | wc -l" interval="single" # does not discriminate cores and processors
sensors name="StaticMemTotal" type="program" cmd="expr `cat /proc/meminfo | grep MemTotal: | tr -d [:alpha:][:blank:][:punct:]` \/ 1000000" interval="single"

# get loadavg for the last minute and get a percentage, taking into account
# the number of CPUs
sensors name="ChargeLoadAvg" type="engine" cmd="systemmonitor:cpu/system/loadavg1:value" math="double $0 100 *" interval="3000"
sensors name="ChargeLoadAvgCorrected" use="ChargeLoadAvg" use="StaticCpuCount" type="math" math="int $1 $2 /" interval="3000"

# Output
text use="StaticCpuModel" use="StaticCpuCount" use="StaticMemTotal" format="$2 x $1, $3 Go RAM :" interval="single"
value key=" " use="ChargeLoadAvgCorrected" use="ChargeCpuFreq" format="$1 % à $2" interval="3000"
#plotter use="ChargeLoadAvgCorrected" plot="$1" color="#E3D5FF" height="50" min="0" max="100" interval="1500"
#value font="Monospace, 7" use="ChargeTop2" format="$1" color="#FF9E91"  interval="8000"
value font="Monospace, 7" use="ChargeTop" key=" " format="$1" icon="/usr/share/icons/oxygen/48x48/actions/office-chart-pie.png"  interval="6000"
#value font="Monospace, 7" use="ChargeTop8" format="$1" color="#9BFFB6"  interval="8000"

## SENSORS
##
# - This part is way to specific. Even if you did configured properly lm-sensors
# to get proper labels, on many boxes you have so many sensors detected, and so
# few that actually provides relevant data that this script could not cover
# them, except by doing thousands calls to sensors and grepping/cutting, etc.
# Instead, we'll hardcore what makes sense.
# - For harddisks, we'll use hddtemp in deamon mode (dpkg-reconfigure hddtemp)
# to avoid suid stuff.
title text="Sondes"

# lmsensors 
sensors name="SensorsCPUTemp" type="engine" cmd="systemmonitor:lmsensors/acpitz-virtual-0/CPU_Temperature:value" math="int $0" interval="5000"
sensors name="SensorsCaseFanSpeed" type="engine" cmd="systemmonitor:lmsensors/i8k-virtual-0/Case_L_Fan_Speed:value" math="int $0" interval="5000"
sensors name="SensorsCPUFanSpeed" type="engine" cmd="systemmonitor:lmsensors/i8k-virtual-0/CPU_R_Fan_Speed:value"math="int $0" interval="5000"

# hddtempd
sensors name="SensorsHdd1Temp" type="program" cmd=%netcat localhost 7634 | awk -F \| '{print $4" °C pour "$3}'% interval="5000"


value key="Processeur :" use="SensorsCPUTemp" use="SensorsCPUFanSpeed" format="$1 °C, $2 trs/min" interval="5000"
value key="Boitier :" use="SensorsCaseFanSpeed" format="$1 trs/min" interval="5000"
value key="Disque dur :" use="SensorsHdd1Temp" format="$1" interval="5000"
#value key="" use="SensorsHdd2Temp" format="$1" interval="5000"
#value key="" use="SensorsHdd3Temp" format="$1" interval="5000"


## NETWORKING
##
title text="Réseau"
# in case of plurality of eth interfaces, just copy the eth0 stuff
# to eth(n) stuff, etc
# requires ethtool
sensor name="NetGateway" type="program" cmd="nslookup `route -n | grep UG  |awk '{print $2}'` | grep name | cut -d = -f 2 | sed s/\.$//;" interval="60000"
#IF THE PREVIOUS DOES NOT WORK (no domain) sensor name="NetGateway" type="program" cmd="route -n | grep UG  |awk '{print $2}'" interval="60000"

sensor name="NetEth0Ip" type="program" cmd="/sbin/ifconfig eth0 | egrep 'inet add?r'  | cut -d ':' -f 2 | cut -d ' ' -f 1" interval="160000"
sensor name="NetEth0Speed" type="program" cmd="/sbin/ethtool eth0 2>/dev/null | grep Speed: | cut -d ' ' -f 2 | sed 's/\([0-9]*\)\([^0-9]*\)/\1 \2/g;'" interval="160000"


# Output
text use="NetEth0Ip" use="NetEth0Speed" format="$1 sur eth0 à $2" interval="160000"

## STORAGE
##
# (convert kilobytes to human readable Gb, 1048576 = 1) 
title text="Stockage"

sensor name="StorageRootAvailable" type="engine" cmd="systemmonitor:partitions//freespace:value" math="int $0" interval="180000"
sensor name="StorageRootAvailableGb" type="math" use="StorageRootAvailable" math="int $1 1048576 /" interval="180000"
sensor name="StorageRootUsed" type="engine" cmd="systemmonitor:partitions//usedspace:value" math="int $0" interval="180000"
sensor name="StorageRootTotal" use="StorageRootAvailable" use="StorageRootUsed" type="math" math="int $1 $2 +" interval="180000"
sensor name="StorageRootTotalGb" type="math" use="StorageRootTotal" math="int $1 1000000 /" interval="180000"

sensor name="StorageHomeAvailable" type="engine" cmd="systemmonitor:partitions/home/freespace:value" math="int $0" interval="180000"
sensor name="StorageHomeAvailableGb" type="math" use="StorageHomeAvailable" math="int $1 1048576 /" interval="180000"
sensor name="StorageHomeUsed" type="engine" cmd="systemmonitor:partitions/home/usedspace:value" math="int $0" interval="180000"
sensor name="StorageHomeTotal" use="StorageHomeAvailable" use="StorageHomeUsed" type="math" math="int $1 $2 +" interval="180000"
sensor name="StorageHomeTotalGb" type="math" use="StorageHomeTotal" math="int $1 1000000 /" interval="180000"

meter use="StorageRootUsed" use="StorageRootTotal" use="StorageRootAvailableGb" use="StorageRootTotalGb"  label:0="/ :" label:1="reste $3 sur $4 Go" alignment:1="right" min="0" max="$2" value="$1" interval="180000"
meter use="StorageHomeUsed" use="StorageHomeTotal" use="StorageHomeAvailableGb" use="StorageHomeTotalGb"  label:0="/home :" label:1="reste $3 sur $4 Go" alignment:1="right" min="0" max="$2" value="$1" interval="180000"



## (OPERATING) SYSTEM
##
title text="Système"

sensors name="StaticSysOS" type="program" cmd="lsb_release -sd" interval="single"
sensors name="StaticSysKernel" type="program" cmd="uname --kernel-name --kernel-release" interval="single"
sensors name="SysAptGet" type="program" cmd="apt-get --quiet --simulate --yes dist-upgrade | grep ^Inst\ | wc -l" interval="1800000"
value key=" " use="StaticSysOS" use="StaticSysKernel" use="SysAptGet" format="$1\n$2\n$3 paquet(s) à installer/mettre à jour\n\n" icon="/usr/share/icons/oxygen/48x48/apps/system-software-update.png"  interval="1800000"

# EOF

